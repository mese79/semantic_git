#!/usr/bin/env python
import sys
import pickle
from pkg_resources import resource_filename


def complete(incomplete_cmd):
    # get all keywords
    with open(resource_filename(__name__, 'keywords_db.pk'), mode='rb') as f:
        keywords = pickle.load(f)

    words = []
    if len(incomplete_cmd) == 1:
        # an sgit command just started:
        # return all possible starting words
        words = [k for k in keywords.keys() if '/' not in k]

    else:
        query = '/'.join(incomplete_cmd[1:])
        if query in keywords:
            # query is a key already
            words = keywords.get(query)
        else:
            # query has incomplete word at the end
            words = [
                extract_options(k, query)
                for k in keywords.keys() if k.startswith(query)
            ]

    return sorted(set(words))


def extract_options(path_key: str, query: str) -> str:
    # last word is incomplete
    # return last word before next / char
    return path_key.split('/')[query.count('/')]




if __name__ == '__main__':
    # sys.argv[0] is auto_complete.py
    # sys.argv[1] is |start|,
    # then all user input words util |end|
    end_idx = sys.argv.index('|end|')
    print(
        ' \n'.join(complete(sys.argv[2: end_idx]))
    )
